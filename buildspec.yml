version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - |
        if [ "$SONAR_ENABLED" = "true" ]; then
          wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_VERSION}-linux.zip
          unzip -qq sonar-scanner-cli-${SONAR_VERSION}-linux.zip
          PATH=$PATH:/sonar-scanner-${SONAR_VERSION}-linux/bin/
        fi
      - |
        if [ "$SNYK_ENABLED" = "true" ]; then
          SNYK=snyk-linux-arm64
          wget -q https://static.snyk.io/cli/latest/$SNYK
          chmod +x $SNYK
        fi
  build:
    commands:
      - echo Build started on `date`
      - mvn package --no-transfer-progress
      - |
        if [ "$SONAR_ENABLED" = "true" ]; then
          mvn sonar:sonar -Dsonar.token=$SONAR_TOKEN -Dsonar.host.url=$SONAR_URL -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG --no-transfer-progress
          sleep 10
          curl -s $SONAR_REPORT_URL > result.json
          cat result.json
          if [ $(jq -r '.projectStatus.status' result.json) = ERROR ]; then CODEBUILD_BUILD_SUCCEEDING=0;fi
        fi
      - |
        if [ "$SNYK_ENABLED" = "true" ]; then
          ./$SNYK code test --org=$SNYK_ORG
          if [ $? != 0 ]; then CODEBUILD_BUILD_SUCCEEDING=0;fi
        fi
      - echo Build completed on `date`
  post_build:
    commands:
      - aws cloudformation package --template-file cloudformation.yml --s3-bucket $S3_BUCKET --output-template-file $PACKAGED_TEMPLATE
artifacts:
  files:
    - $PACKAGED_TEMPLATE
    - target/java-sample-1.0-SNAPSHOT.jar
